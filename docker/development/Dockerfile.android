# Copyright 2018,2019,2020,2021 Sony Corporation.
# Copyright 2021,2022 Sony Group Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# for nnabla>=1.5.0

FROM ubuntu:24.04

ARG PIP_INS_OPTS
ARG PYTHONWARNINGS
ARG CURL_OPTS
ARG WGET_OPTS
ARG APT_OPTS


ARG PYVERNAME=3.8

RUN eval ${APT_OPTS} && apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
       libssl-dev \
       bzip2 \
       ca-certificates \
       ccache \
       clang-format \
       curl \
       g++ \
       libarchive-dev \
       libhdf5-dev \
       make \
       unzip \
       zip \
       python3-pip \
       python${PYVERNAME} \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && cd / \
    && rm -rf /tmp/*

RUN update-alternatives --install /usr/bin/python python /usr/bin/python${PYVERNAME} 0
RUN python -m pip install ${PIP_INS_OPTS} --upgrade pip \
    && python -m pip install ${PIP_INS_OPTS} setuptools six PyYAML Mako


##### Install CMAKE #####
ARG CMAKEVER=3.22.1

RUN mkdir /tmp/deps \
    && cd /tmp/deps \
    && curl ${CURL_OPTS} -LO https://github.com/Kitware/CMake/releases/download/v${CMAKEVER}/cmake-${CMAKEVER}.tar.gz \
    && tar xzf cmake-${CMAKEVER}.tar.gz \
    && cd cmake-${CMAKEVER} \
    && ./bootstrap \
    && make -j8 \
    && make install \
    && cd / \
    && rm -rf /tmp/deps


##### Download and Install Android NDK #####
ARG ANDROID_NDKNAME=android-ndk-r25b

RUN cd /usr/local/src \
    && VER=$(echo ${ANDROID_NDKNAME} | sed -e 's/^android-ndk-r\([0-9]\+\).*/\1/') \
    && if [ "$VER" -le "22" ]; then \
           NDKPKG=${ANDROID_NDKNAME}-linux-x86_64; \
       else \
           NDKPKG=${ANDROID_NDKNAME}-linux; \
       fi \
    && curl ${CURL_OPTS} -LO https://dl.google.com/android/repository/${NDKPKG}.zip \
    && unzip -q ${NDKPKG}.zip \
    && rm -f ${NDKPKG}.zip
ENV NDK_PATH /usr/local/src/${ANDROID_NDKNAME}

RUN mkdir -p /usr/local/android \
    && chmod -R a+rw /usr/local/android

ARG ANDROID_PLATFORM=android-33
ARG ANDROID_ARCHITECTURE=arm64
ARG ANDROID_CMAKE_SYSTEM_NAME=aarch64-linux-android
ARG ANDROID_EABI=arm64-v8a


##### Install protobuf for host and target #####
ARG PROTOVER=3.20.3

RUN mkdir /tmp/deps \
    && cd /tmp/deps \
    && curl ${CURL_OPTS} -LO https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz \
    && tar xzf v${PROTOVER}.tar.gz \
    && rm -f v${PROTOVER}.tar.gz \
    && cd protobuf-${PROTOVER} \
    && mkdir build android-build \
    && cd build \
    && cmake \
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
        -Dprotobuf_BUILD_TESTS=OFF \
        -DCMAKE_CXX_STANDARD=14 \
        -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc \
        ../cmake \
    && make -j8 \
    && make install \
    && cd ../android-build \
    && cmake  -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake \
              -DANDROID_ABI=$ANDROID_EABI \
              -DANDROID_STL=c++_shared \
              -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
              -DCMAKE_SYSTEM_NAME=$ANDROID_CMAKE_SYSTEM_NAME \
              -Dprotobuf_BUILD_TESTS=OFF \
              -DCMAKE_INSTALL_PREFIX=/usr/local/android/${ANDROID_ARCHITECTURE} \
              -DBUILD_SHARED_LIBS=ON \
              ../cmake \
    && $NDK_PATH/prebuilt/linux-x86_64/bin/make -j8 \
    && $NDK_PATH/prebuilt/linux-x86_64/bin/make install \
    && cd / \
    && rm -rf /tmp/deps


##### Install libarchive #####
RUN mkdir /tmp/deps \
    && cd /tmp/deps \
    && curl ${CURL_OPTS} -LO https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz \
    && tar xzf libarchive-3.3.2.tar.gz \
    && cd libarchive-3.3.2 \
    && sed -i "/INCLUDE(CheckTypeSize)/aINCLUDE_DIRECTORIES(/tmp/deps/libarchive-3.3.2/contrib/android/include/)" \
       CMakeLists.txt \
    && cmake  \
       -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake \
       -DANDROID_ABI=$ANDROID_EABI \
       -DANDROID_STL=c++_shared \
       -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
       -DCMAKE_SYSTEM_NAME=$ANDROID_CMAKE_SYSTEM_NAME \
       -DCMAKE_INSTALL_PREFIX=/usr/local/android/${ANDROID_ARCHITECTURE} \
       -DENABLE_TEST=OFF \
       . \
    && sed -i "/#include \"passphrase.h\"/a#ifdef ANDROID\nint wctomb(char *s, wchar_t wc) { return wcrtomb(s,wc,NULL); }\nint mbtowc(wchar_t *pwc, const char *s, size_t n) { return mbrtowc(pwc, s, n, NULL); }\n#endif" tar/util.c \
    && $NDK_PATH/prebuilt/linux-x86_64/bin/make -j8 \
    && $NDK_PATH/prebuilt/linux-x86_64/bin/make install \
    && cp /tmp/deps/libarchive-3.3.2/contrib/android/include/* /usr/local/android/${ANDROID_ARCHITECTURE}/include/ \
    && cd / \
    && rm -rf /tmp/deps

ENV PLATFORM=${ANDROID_PLATFORM} \
    ARCHITECTURE=${ANDROID_ARCHITECTURE} \
    CMAKE_SYSTEM_NAME=${ANDROID_CMAKE_SYSTEM_NAME} \
    EABI=${ANDROID_EABI} \
    SYSTEM_PYTHON=/usr/bin/python \
    SYSTEM_PROTOC=/usr/local/bin/protoc \
    TOOLCHAIN_INSTALL_DIR=/usr/local/android/${ANDROID_ARCHITECTURE}
