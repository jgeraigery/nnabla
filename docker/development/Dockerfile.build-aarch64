# Copyright 2022 Sony Group Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM arm64v8/debian:bookworm

ARG PIP_INS_OPTS
ARG PYTHONWARNINGS
ARG CURL_OPTS
ARG WGET_OPTS
ARG APT_OPTS

ENV LC_ALL C
ENV LANG C
ENV LANGUAGE C

RUN eval ${APT_OPTS} && apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
       ca-certificates \
       build-essential \
       ccache \
       cmake \
       curl \
       g++ \
       git \
       make \
       unzip \
       wget \
       bzip2 \
       zip \
       llvm \
       xz-utils \
       tk-dev \
       libarchive-dev \
       libatlas-base-dev \
       libhdf5-dev \
       libopenblas-dev \
       liblapack-dev \
       liblzma-dev \
       libbz2-dev \
       libreadline-dev \
       libncursesw5-dev \
       libsqlite3-dev \
       libffi-dev \
       libssl-dev

############################################################ protobuf
ENV PROTOVER=3.20.3
RUN mkdir /tmp/deps \
    && cd /tmp/deps \
    && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \
    && tar xvf protobuf-v${PROTOVER}.tar.gz \
    && cd protobuf-${PROTOVER} \
    && mkdir build \
    && cd build \
    && cmake \
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
        -Dprotobuf_BUILD_TESTS=OFF \
        -DCMAKE_CXX_STANDARD=14 \
        -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc \
        ../cmake \
    && make -j8 \
    && make install \
    && cd / \
    && rm -rf /tmp/*

ARG PYTHON_VERSION_MAJOR=3
ARG PYTHON_VERSION_MINOR=9
ENV PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}

# Install pyenv
RUN git clone https://github.com/pyenv/pyenv.git ~/.pyenv \
    && export PYENV_ROOT="$HOME/.pyenv" \
    && export PATH="$PYENV_ROOT/bin:$PYENV_ROOT/plugins/python-build/bin:$PATH" \
    && eval "$(pyenv init -)" \
    && export PYTHON_BUILD_CURL_OPTS="${CURL_OPTS}" \
    && export PYTHON_BUILD_WGET_OPTS="${WGET_OPTS}" \
    && export PYTHON_CONFIGURE_OPTS=--disable-shared \   
    && python-build `pyenv latest -k ${PYVERNAME}` /usr/local \
    && pyenv global system \
    && rm -rf ~/.pyenv/.git

ADD python/setup_requirements.txt /tmp/deps/
ADD python/requirements.txt /tmp/deps/
ADD python/test_requirements.txt /tmp/deps/

RUN python3 -m pip install ${PIP_INS_OPTS} --no-cache-dir --upgrade pip \
    && echo "[global]" >/etc/pip.conf \
    && echo "extra-index-url=https://www.piwheels.org/simple" >> /etc/pip.conf \
    && pip install ${PIP_INS_OPTS} --no-cache-dir -r /tmp/deps/setup_requirements.txt \
    && sed -i '/onnx/d' /tmp/deps/requirements.txt \
    && pip install ${PIP_INS_OPTS} --no-cache-dir -r /tmp/deps/requirements.txt \
    && rm -rf /tmp/*

ENV PATH /tmp/.local/bin:$PATH
